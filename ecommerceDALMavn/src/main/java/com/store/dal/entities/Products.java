package com.store.dal.entities;
// Generated Jan 27, 2021 1:34:35 PM by Hibernate Tools 4.3.1


import com.fasterxml.jackson.annotation.JsonIdentityInfo;
import com.fasterxml.jackson.annotation.ObjectIdGenerators;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Products generated by hbm2java
 */
@Entity
@Table(name="products"
    ,catalog="ecommerce"
)
@JsonIdentityInfo(generator = ObjectIdGenerators.PropertyGenerator.class,
        property = "productId",
 scope = Products.class)
public class Products  implements java.io.Serializable {


     private Integer productId;
     private Category category;
     private String sku;
     private String name;
     private String description;
     private Boolean active;
     private Date createDate;
     private Integer unitInStock;
     private Integer unitPrice;
     private String imageUrl;
     private Set<Orderitems> orderitemses = new HashSet<Orderitems>(0);

    public Products() {
    }

	
    public Products(Date createDate) {
        this.createDate = createDate;
    }
    public Products(Category category, String sku, String name, String description, Boolean active, Date createDate, Integer unitInStock, Integer unitPrice, String imageUrl, Set<Orderitems> orderitemses) {
       this.category = category;
       this.sku = sku;
       this.name = name;
       this.description = description;
       this.active = active;
       this.createDate = createDate;
       this.unitInStock = unitInStock;
       this.unitPrice = unitPrice;
       this.imageUrl = imageUrl;
       this.orderitemses = orderitemses;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="productID", unique=true, nullable=false)
    public Integer getProductId() {
        return this.productId;
    }
    
    public void setProductId(Integer productId) {
        this.productId = productId;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="categoryID")
    public Category getCategory() {
        return this.category;
    }
    
    public void setCategory(Category category) {
        this.category = category;
    }

    
    @Column(name="sku", length=45)
    public String getSku() {
        return this.sku;
    }
    
    public void setSku(String sku) {
        this.sku = sku;
    }

    
    @Column(name="name", length=45)
    public String getName() {
        return this.name;
    }
    
    public void setName(String name) {
        this.name = name;
    }

    
    @Column(name="description", length=45)
    public String getDescription() {
        return this.description;
    }
    
    public void setDescription(String description) {
        this.description = description;
    }

    
    @Column(name="active")
    public Boolean getActive() {
        return this.active;
    }
    
    public void setActive(Boolean active) {
        this.active = active;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="create_date", nullable=false, length=19)
    public Date getCreateDate() {
        return this.createDate;
    }
    
    public void setCreateDate(Date createDate) {
        this.createDate = createDate;
    }

    
    @Column(name="unit_in_stock")
    public Integer getUnitInStock() {
        return this.unitInStock;
    }
    
    public void setUnitInStock(Integer unitInStock) {
        this.unitInStock = unitInStock;
    }

    
    @Column(name="unit_price")
    public Integer getUnitPrice() {
        return this.unitPrice;
    }
    
    public void setUnitPrice(Integer unitPrice) {
        this.unitPrice = unitPrice;
    }

    
    @Column(name="image_url", length=45)
    public String getImageUrl() {
        return this.imageUrl;
    }
    
    public void setImageUrl(String imageUrl) {
        this.imageUrl = imageUrl;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="products", cascade = CascadeType.ALL)
    public Set<Orderitems> getOrderitemses() {
        return this.orderitemses;
    }
    
    public void setOrderitemses(Set<Orderitems> orderitemses) {
        this.orderitemses = orderitemses;
    }




}


